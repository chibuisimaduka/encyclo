.entity_leaf{id: "entity_leaf_#{entity_leaf.id}"}
  - nested = 0 unless local_assigns.has_key?(:nested)
  = render :partial => "entities/entity_leaf_link", locals: {entity: entity_leaf, editable: editable, opened: opened_entities[entity_leaf.id], nested: nested}
  - if opened_entities[entity_leaf.id]
    - if entity_leaf.is_leaf
      = show_limited_results entity_leaf.map_all(:parent, :subentities), limit: 15 do |subentity|
        - if (entity = entity_leaf.entities.find_by_name(subentity.name))
          = link_to subentity.name, entity
        - else
          %span.missing= link_to subentity.printable_name, entities_path(entity: {parent_id: entity_leaf.id, name: subentity.name, is_leaf: !subentity.is_many}, show: true), method: :post
    - else
      = show_limited_results entity_leaf.entities, limit: 15, more_message: "#{entity_leaf.entities.size - 15} more entities." do |child|
        = render :partial => "entities/entity_leaf", :locals => {:nested => nested+1, :editable => editable, :entity_leaf => child}
  - if editable && editable != 'false'
    .change_entity_parent{:id => "change_entity_parent_#{entity_leaf.id}"}
      = "|"*(nested+1)
      = form_tag(change_parent_entities_path(format: :js, nested: nested), method: :put, remote: true) do
        %span.fields
          = autocomplete_field_tag :name, '', autocomplete_entity_name_entities_path, :size => 15
          = hidden_field_tag(:parent_id, entity_leaf.id)
        %span.actions
          = submit_tag "Change parent"
