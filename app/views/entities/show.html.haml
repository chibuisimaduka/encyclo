= content_for :left_sidebar do
  #create_entity
    = link_to "Create an entity", new_entity_path(:parent_id => @entity.id)
  #create_document
    = link_to "Create a document", new_document_path(:entity_id => @entity.id)
  #index_entities
    #search_entity_sidebar_text What are you looking for?
    = render :partial => "entities/search"
  #entity_components
    Components:
    - for component in @entity.components
      .component_link
        = link_to component.name, component.component_entity # pluralize if component.type == single entity
        %span.editable= best_in_place component, :component_type, type: :select, collection: (ComponentType::ALL.map{|t| [t, t] })
    = render :partial => "components/form", :locals => {:entity => @entity}
  #browse_entities
    Browse entities
    = render :partial => "entities/entity_leaf", locals: {editable: false, entity_leaf: @entity.parent_id.blank? ? @entity : @entity.parent}

= javascript_include_tag 'entities'

#browsing_entities
  = link_to "Back", :back
  |
  = link_to "Next", @entity
  |
  = link_to "Previous", @entity
  \----------
  = join(@entity.ancestors.reverse, " > ") do |e|
    = link_to e.name, e
#images
  - @entity.images.each do |image|
    .image
      = image_tag image.image.to_s
  .add_image
    = toggle_visibility "Add an image.." do
      = form_for [@entity, Image.new], html: {multipart: true} do |f|
        %p= f.file_field :image
        %p
          = f.label :remote_image_url, "or image URL"
          = f.text_field :remote_image_url
        %p= f.submit "Add image"
#entity
  #refine_document_filter
    #language_filter
      Filter by language:
      %span.editable= best_in_place filterer, :language_id, type: :select, collection: (Language.all.sort_by(&:name).map{|l| [l.id, l.name] }).insert(0, ['', "No filter"]), path: {controller: "sessions", action: "update", model: "filterer"}, nil: "No filter"
    #document_type_filter
      Filter by document type:
      %span.editable= best_in_place filterer, :document_type_id, type: :select, collection: (DocumentType.all.sort_by(&:name).map{|d| [d.id, d.name] }).insert(0, ['', "No filter"]), path: {controller: "sessions", action: "update", model: "filterer"}, nil: "No filter"
  #entity_title
    %h1.entity_name{:style => "font-size: 32;"}= @entity.name
    = link_to "destroy", @entity, :method => :delete, :confirm => "Are you sure?"
    %br
    - for tag in @entity.tags
      = render :partial => tag
    = render :partial => "entities/add_tag_form"
  #components_values
    - if @entity.entities.blank?
      - for component in @entity.all_components
        .component
          = component.name
          %span.editable= best_in_place component.predicates.find_or_initialize_by_entity_id(@entity.id), :value, path: {controller: "predicates", action: "update", component_id: component.id, entity_id: @entity.id}
  #documents
    = render :partial => @entity.documents.where(filterer.filter_attributes)[0..3]
  = toggle_visibility "Add a document.." do
    = render :partial => "documents/form"
  = link_to "Create a document..", new_document_path
#sub_entities
  = render :partial => "index"
