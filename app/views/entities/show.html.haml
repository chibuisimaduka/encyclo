= content_for :left_sidebar do
  #index_entities
    #search_entity_sidebar_text What are you looking for?
    = render :partial => "entities/search"
  - unless @entity.is_leaf
    #entity_subentities
      Subentities:
      = render partial: "subentities/subentity_link", collection: @entity.subentities
      = render :partial => "subentities/form", :locals => {:entity => @entity}
    #entity_components
      Components:
      = render partial: "components/component_link", collection: @entity.components
      = render :partial => "components/form", :locals => {:entity => @entity}
  #browse_entities
    Browse entities
    = render :partial => "entities/entity_leaf", locals: {editable: false, entity_leaf: @entity.parent_id.blank? ? @entity : @entity.parent}

= javascript_include_tag 'entities'

#browsing_entities
  = link_to "Back", :back
  |
  = link_to "Next", @entity
  |
  = link_to "Previous", @entity
  \----------
  = join(@entity.map_all(:parent)[1..-1].reverse, " > ") do |e|
    = link_to e.name, e
#entity
  #refine_document_filter
    #language_filter
      Filter by language:
      = best_in_place filterer, :language_id, type: :select, collection: (Language.all.sort_by(&:name).map{|l| [l.id, l.name] }).insert(0, ['', "No filter"]), path: {controller: "sessions", action: "update", model: "filterer"}, nil: "No filter"
    #document_type_filter
      Filter by document type:
      = best_in_place filterer, :document_type_id, type: :select, collection: (DocumentType.all.sort_by(&:name).map{|d| [d.id, d.name] }).insert(0, ['', "No filter"]), path: {controller: "sessions", action: "update", model: "filterer"}, nil: "No filter"
  #entity_title
    %h1#entity_name.entity_name= @entity.name.capitalize
    = best_in_place @entity, :is_leaf, type: :checkbox, collection: ["Branch", "Leaf"]
    = link_to "destroy", @entity, :method => :delete, :confirm => "Are you sure?"
  #documents= render partial: @entity.documents.where(filterer.filter_attributes)[0..3]
  = render :partial => "documents/form"
  or
  = link_to "Create a document", new_document_path
  #references
    References
    - @entity.references_by_predicate.each do |component_name, refs|
      .reference_predicate
        .predicate_name= link_to refs.first.predicate.entity.parent.name.capitalize.pluralize, refs.first.predicate.entity.parent
        - position = 0
        - for ref in refs
          .reference
            = render partial: ref.predicate.entity, locals: {position: (position += 1)}
  #sub_predicate_entities_values
    Subpredicates
    - position = 0
    - for ref in @entity.parent_components.map(&:predicates).flatten.map(&:entity_refs).flatten
      = render partial: ref.entity, locals: {position: position += 1}
      -#.sub_predicate_entity_value= link_to ref.name, ref.entity
#content_sidebar
  - @entity.images.each do |image|
    .image= image_tag image.image.to_s
  = render partial: "entities/add_image_form"
  #components_values= render partial: @entity.map_all(:parent, :components) if @entity.is_leaf
#sub_entities
  Subentities
  #entities
    - position = 0
    = rankable_list @entity, @entities, :limit => 20 do |entity|
      = render :partial => entity, locals: {position: (position += 1)}
  
  = render :partial => "entities/form", locals: {parent: @entity}
