-# Locals
-# Entity: The entity that would hold the new association.
-# Definition: Definition is the association of entity or one of it's parent to an intermediate entity.

- definition.associated_entity.all_association_definitions(current_user).each do |intermediate_def|
  -# Intermediate_def: One of the predicate of the intermediate entity.
  .intermediate_association
    -# TODO: Add many fields if the association definition is many.
    = f.fields_for :associations, Association.new do |association_fields| # OPTIMIZE: Is Association.new needed?
      - if intermediate_def.associated_entity_id == definition.entity.id
        - if local_assigns.has_key?(:entity)
          = association_fields.hidden_field :associated_entity_id, :value => entity.id
          = association_fields.hidden_field :association_definition_id, :value => definition.id
      - else
        - if intermediate_def.associated_entity.is_intermediate
          = association_fields.fields_for :associated_entity, Entity.new do |nested_entity_fields|
            = nested_entity_fields.hidden_field :parent_id, :value => intermediate_def.associated_entity_id
            = render partial: "associations/intermediate_fields", locals: {f: nested_entity_fields, definition: intermediate_def}
        - else
          = intermediate_def.associated_entity.name(current_user, current_language).value + ":"
          = render partial: "associations/fields_form", locals: {f: association_fields, definition: intermediate_def}
