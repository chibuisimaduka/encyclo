- id = "definition_#{definition.id}_#{inversed ? "i" : "n"}"
.definition{id: id}
  - definition_entity = inversed ? definition.entity : definition.associated_entity
  - name = (inversed ? definition.associated_entity_has_many : definition.entity_has_many) ? definition_entity.name.pluralize : definition_entity.name
  %span.association_definition_name= link_to name, definition_entity
  \:
  = show_limited_results associations, limit: 3 do |association|
    - association_entity = inversed ? association.entity : association.associated_entity
    .entity_name= link_to association_entity.name, association_entity
    = link_to image_tag("delete_button.png"), association_entity, :method => :delete, :confirm => "Are you sure?"
    = link_to image_tag("remove_button.png", :title => "#{association_entity.name} is not a #{definition_entity.name} for #{entity.name}?"), association, method: :delete
- if (inversed ? definition.associated_entity_has_many : definition.entity_has_many) || associations.blank?
  = link_to_insert "Add", render(partial: "associations/form", locals: {:entity => entity, definition: definition, inversed: inversed}), "##{id}"
